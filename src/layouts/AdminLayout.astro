---
import AdminAuth from '../components/AdminAuth.astro';
import '../styles/glassmorphism.css';

export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Admin Dashboard" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <title>{title} | Admin</title>
  </head>
  <body>
    <AdminAuth>
      <div class="min-h-screen flex" style="padding: 16px;">
        <!-- Sidebar -->
        <aside class="w-64 glass rounded-2xl mr-4">
          <div class="p-6">
            <h1 class="text-xl font-bold" style="color: var(--color-primary);">Admin Dashboard</h1>
          </div>
          
          <nav class="mt-6">
            <div class="px-6 py-2">
              <p class="text-xs font-semibold text-gray-400 uppercase tracking-wider">Main</p>
            </div>
            <a href="/admin/dashboard" class="flex items-center px-6 py-3 text-gray-700 hover:bg-gray-100 hover:text-primary transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 5a2 2 0 012-2h4a2 2 0 012 2v6H8V5z"></path>
              </svg>
              Dashboard
            </a>
            
            <div class="px-6 py-2 mt-6">
              <p class="text-xs font-semibold text-gray-400 uppercase tracking-wider">Content</p>
            </div>
            <a href="/admin/posts" class="flex items-center px-6 py-3 text-gray-700 hover:bg-gray-100 hover:text-primary transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
              </svg>
              Posts
            </a>
            <a href="/admin/projects" class="flex items-center px-6 py-3 text-gray-700 hover:bg-gray-100 hover:text-primary transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
              </svg>
              Projects
            </a>
            
            <div class="px-6 py-2 mt-6">
              <p class="text-xs font-semibold text-gray-400 uppercase tracking-wider">Data</p>
            </div>
            <a href="/admin/subscribers" class="flex items-center px-6 py-3 text-gray-700 hover:bg-gray-100 hover:text-primary transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
              </svg>
              Subscribers
            </a>
            <a href="/admin/metrics" class="flex items-center px-6 py-3 text-gray-700 hover:bg-gray-100 hover:text-primary transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
              </svg>
              Metrics
            </a>
            <a href="/admin/profile" class="flex items-center px-6 py-3 text-gray-700 hover:bg-gray-100 hover:text-primary transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              Profile
            </a>
          </nav>
          
          <div class="absolute bottom-0 w-64 p-6">
            <button id="logout-btn" class="flex items-center w-full px-4 py-2 text-gray-700 hover:bg-gray-100 rounded-lg transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
              </svg>
              Logout
            </button>
          </div>
        </aside>
        
        <!-- Main content -->
        <main class="flex-1 overflow-auto">
          <header class="glass rounded-2xl mb-4">
            <div class="px-6 py-4">
              <h1 class="text-2xl font-semibold" style="color: var(--text-primary);">{title}</h1>
            </div>
          </header>

          <div class="glass rounded-2xl p-6">
            <slot />
          </div>
        </main>
      </div>
    </AdminAuth>
    
    <script>
      import { signOutAdmin } from '../lib/supabase';
      
      // Logout functionality
      document.getElementById('logout-btn')?.addEventListener('click', async () => {
        if (confirm('Are you sure you want to logout?')) {
          const result = await signOutAdmin();
          if (result.success) {
            window.location.href = '/admin/login';
          } else {
            alert('Logout failed: ' + result.error);
          }
        }
      });
      
      // Highlight current page in navigation
      const currentPath = window.location.pathname;
      const navLinks = document.querySelectorAll('aside nav a');
      navLinks.forEach(link => {
        if (link.getAttribute('href') === currentPath) {
          link.classList.add('bg-blue-50', 'text-primary', 'border-r-2', 'border-primary');
        }
      });
    </script>
  </body>
</html>
