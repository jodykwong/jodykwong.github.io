---
// SEOHead.astro - SEO 优化组件
export interface Props {
  title?: string;
  description?: string;
  keywords?: string[];
  ogTitle?: string;
  ogDescription?: string;
  ogImage?: string;
  ogType?: 'website' | 'article' | 'profile';
  twitterTitle?: string;
  twitterDescription?: string;
  twitterImage?: string;
  twitterCard?: 'summary' | 'summary_large_image';
  canonicalUrl?: string;
  robots?: string;
  author?: string;
  publishedTime?: string;
  modifiedTime?: string;
  section?: string;
  tags?: string[];
}

const {
  title = 'Jody Kwong - Full-Stack Developer & Entrepreneur',
  description = 'Personal website of Jody Kwong, a full-stack developer and entrepreneur sharing insights on technology, product development, and startup journey.',
  keywords = ['Jody Kwong', 'Full-Stack Developer', 'Entrepreneur', 'Technology', 'Startup'],
  ogTitle = title,
  ogDescription = description,
  ogImage = '/images/og-default.jpg',
  ogType = 'website',
  twitterTitle = title,
  twitterDescription = description,
  twitterImage = ogImage,
  twitterCard = 'summary_large_image',
  canonicalUrl = Astro.url.href,
  robots = 'index,follow',
  author = 'Jody Kwong',
  publishedTime,
  modifiedTime,
  section,
  tags = []
} = Astro.props;

// 确保 URL 是绝对路径
const getAbsoluteUrl = (url: string) => {
  if (url.startsWith('http')) return url;
  return new URL(url, Astro.site || 'https://jodykwong.github.io').href;
};

const absoluteOgImage = getAbsoluteUrl(ogImage);
const absoluteTwitterImage = getAbsoluteUrl(twitterImage);
const absoluteCanonicalUrl = getAbsoluteUrl(canonicalUrl);

// 生成结构化数据
const generateStructuredData = () => {
  const baseData = {
    "@context": "https://schema.org",
    "@type": ogType === 'article' ? 'Article' : 'WebPage',
    "name": title,
    "description": description,
    "url": absoluteCanonicalUrl,
    "image": absoluteOgImage,
    "author": {
      "@type": "Person",
      "name": author,
      "url": "https://jodykwong.github.io"
    }
  };

  if (ogType === 'article' && publishedTime) {
    return {
      ...baseData,
      "@type": "Article",
      "headline": title,
      "datePublished": publishedTime,
      "dateModified": modifiedTime || publishedTime,
      "articleSection": section,
      "keywords": [...keywords, ...tags].join(', '),
      "publisher": {
        "@type": "Person",
        "name": author,
        "url": "https://jodykwong.github.io"
      }
    };
  }

  return baseData;
};

const structuredData = generateStructuredData();
---

<!-- 基础 Meta 标签 -->
<title>{title}</title>
<meta name="description" content={description} />
<meta name="keywords" content={keywords.join(', ')} />
<meta name="author" content={author} />
<meta name="robots" content={robots} />
<link rel="canonical" href={absoluteCanonicalUrl} />

<!-- Open Graph Meta 标签 -->
<meta property="og:type" content={ogType} />
<meta property="og:title" content={ogTitle} />
<meta property="og:description" content={ogDescription} />
<meta property="og:image" content={absoluteOgImage} />
<meta property="og:url" content={absoluteCanonicalUrl} />
<meta property="og:site_name" content="Jody Kwong" />
<meta property="og:locale" content="zh_CN" />

{ogType === 'article' && publishedTime && (
  <>
    <meta property="article:published_time" content={publishedTime} />
    {modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
    {section && <meta property="article:section" content={section} />}
    <meta property="article:author" content={author} />
    {tags.map((tag) => (
      <meta property="article:tag" content={tag} />
    ))}
  </>
)}

<!-- Twitter Card Meta 标签 -->
<meta name="twitter:card" content={twitterCard} />
<meta name="twitter:title" content={twitterTitle} />
<meta name="twitter:description" content={twitterDescription} />
<meta name="twitter:image" content={absoluteTwitterImage} />
<meta name="twitter:creator" content="@jodykwong" />
<meta name="twitter:site" content="@jodykwong" />

<!-- 额外的 Meta 标签 -->
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="theme-color" content="#0ea5e9" />
<meta name="msapplication-TileColor" content="#0ea5e9" />

<!-- 结构化数据 -->
<script type="application/ld+json" set:html={JSON.stringify(structuredData)}></script>

<!-- 预加载关键资源 -->
<link rel="preload" href="/fonts/sf-pro-display.woff2" as="font" type="font/woff2" crossorigin />
<link rel="preload" href={absoluteOgImage} as="image" />

<!-- DNS 预解析 -->
<link rel="dns-prefetch" href="//fonts.googleapis.com" />
<link rel="dns-prefetch" href="//www.google-analytics.com" />

<!-- 网站图标 -->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="icon" type="image/png" href="/favicon.png" />
<link rel="apple-touch-icon" href="/apple-touch-icon.png" />

<!-- RSS 订阅 -->
<link rel="alternate" type="application/rss+xml" title="Jody Kwong - RSS Feed" href="/rss.xml" />

<!-- 安全性 Headers -->
<meta http-equiv="X-Content-Type-Options" content="nosniff" />
<meta http-equiv="X-Frame-Options" content="DENY" />
<meta http-equiv="X-XSS-Protection" content="1; mode=block" />

<!-- 性能优化 -->
<meta http-equiv="Accept-CH" content="DPR, Viewport-Width, Width" />

<style>
/* 关键 CSS 内联 */
:root {
  --color-primary: #0ea5e9;
  --text-primary: #1f2937;
  --text-secondary: #6b7280;
  --text-tertiary: #9ca3af;
  --bg-primary: rgba(255, 255, 255, 0.9);
  --bg-secondary: rgba(255, 255, 255, 0.7);
  --bg-tertiary: rgba(255, 255, 255, 0.5);
  --border-light: rgba(255, 255, 255, 0.2);
}

@media (prefers-color-scheme: dark) {
  :root {
    --text-primary: #f9fafb;
    --text-secondary: #d1d5db;
    --text-tertiary: #9ca3af;
    --bg-primary: rgba(17, 24, 39, 0.9);
    --bg-secondary: rgba(31, 41, 55, 0.7);
    --bg-tertiary: rgba(55, 65, 81, 0.5);
    --border-light: rgba(75, 85, 99, 0.2);
  }
}

/* 防止布局偏移 */
img {
  height: auto;
  max-width: 100%;
}

/* 字体加载优化 */
@font-face {
  font-family: 'SF Pro Display';
  src: url('/fonts/sf-pro-display.woff2') format('woff2');
  font-display: swap;
  font-weight: 100 900;
}

body {
  font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}
</style>
